- name: Ensure boto and boto3 modules are installed
  pip:
    name: "{{ item }}"
  with_items:
    - boto3
    - botocore

- amazon.aws.ec2_vpc_igw:
    vpc_id: vpc-07bbb68ff6fb5a62a
    state: present
  register: igw

- name: jepsen security group
  amazon.aws.ec2_security_group:
    name: jepsen
    description: from me
    vpc_id: vpc-07bbb68ff6fb5a62a
    region: eu-west-2
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 92.28.161.147/32
      - proto: tcp
        from_port: 65432
        to_port: 65432
        group_name: jepsen
      - proto: tcp
        from_port: 65433
        to_port: 65433
        group_name: jepsen
      - proto: tcp
        from_port: 65434
        to_port: 65434
        group_name: jepsen
      - proto: tcp
        from_port: 65435
        to_port: 65435
        group_name: jepsen
      - proto: tcp
        from_port: 65436
        to_port: 65436
        group_name: jepsen

- name: start a jepsen node
  amazon.aws.ec2_instance:
    name: "node{{item}}"
    key_name: "jepsen2"
    vpc_subnet_id: subnet-0b03558fbd0020026
    instance_type: t2.micro
    security_group: jepsen
    network:
      assign_public_ip: true
    image_id: ami-04090f217d3b566aa

    tags:
      Environment: jepsen
    region: eu-west-2
  loop:
  - 1
  - 2
  - 3
  - 4
  - 5


- name: get facts
  amazon.aws.ec2_instance_info:
    filters:
      instance-state-name: [ "running"]
  register: instances

- name: Print all available facts
  ansible.builtin.debug:
   msg : "{{ item['instance_id'] }}"
  with_items: "{{ instances.instances }}"

- name: remove nodes file
  file:
    name: nodes
    state: absent

- name: create nodes file
  shell: "echo {{ item['public_dns_name'] }} >> nodes"
  with_items: "{{ instances.instances }}"

